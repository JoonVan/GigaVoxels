/*
 * Copyright (C) 2011 Fabrice Neyret <Fabrice.Neyret@imag.fr>
 * Copyright (C) 2011 Cyril Crassin <Cyril.Crassin@icare3d.org>
 * Copyright (C) 2011 Morgan Armand <morgan.armand@gmail.com>
 *
 * This file is part of Gigavoxels.
 *
 * Gigavoxels is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Gigavoxels is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Gigavoxels.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _SPHEREPRODUCER_HCU_
#define _SPHEREPRODUCER_HCU_

#include <cuda_runtime.h>

template < typename NodeRes, typename BrickRes, uint BorderSize, typename VolTreeKernelType >
class SphereProducerKernel
{
public:

	template <typename GPUPoolKernelType>
	__device__
	inline uint produceData(GPUPoolKernelType &nodePool, uint requestID, uint processID,
		uint3 newElemAddress, const LocalizationInfo &parentLocInfo, Loki::Int2Type<0>);

	template <typename GPUPoolKernelType>
	__device__
	inline uint produceData(GPUPoolKernelType &dataPool, uint requestID, uint processID,
		uint3 newElemAddress, const LocalizationInfo &parentLocInfo, Loki::Int2Type<1>);

private:

	__device__
	inline GPUVoxelProducer::GPUVPRegionInfo getRegionInfo(uint3 regionCoords, uint regionDepth);
};

#include "SphereProducer.inl"

#endif // !_SPHEREPRODUCER_HCU_