////////////////////////////////////////////////////////////////////////////////
//
// VERTEX SHADER
//
// GigaVoxels Renderer
// - ...
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// VERSION
////////////////////////////////////////////////////////////////////////////////

#version 410 compatibility

////////////////////////////////////////////////////////////////////////////////
// INPUT
////////////////////////////////////////////////////////////////////////////////

// Vertex position
//in vec4 iPosition;

////////////////////////////////////////////////////////////////////////////////
// UNIFORM
////////////////////////////////////////////////////////////////////////////////
uniform mat4 modelMatrix;
////////////////////////////////////////////////////////////////////////////////
// OUTPUT
////////////////////////////////////////////////////////////////////////////////
varying vec3 pixelPos, normal;
varying vec4 worldPixelPos;
////////////////////////////////////////////////////////////////////////////////
// PROGRAM
////////////////////////////////////////////////////////////////////////////////
void main()
{
	// Pass vertex position
	gl_Position = gl_ModelViewProjectionMatrix*gl_Vertex;
	//worldPixelPos = modelMatrix*gl_Vertex;
	worldPixelPos = gl_Vertex;
	pixelPos = vec3(gl_ModelViewMatrix*gl_Vertex);
	normal = gl_NormalMatrix*gl_Normal;
}